Prueba localbs

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea
$ git init
Initialized empty Git repository in D:/reposgit/udea/.git/

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git clone https://github.com/MinTicTeamOne/fuentes.git
Cloning into 'fuentes'...
remote: Enumerating objects: 7, done.
remote: Counting objects: 100% (7/7), done.
remote: Compressing objects: 100% (6/6), done.
remote: Total 7 (delta 1), reused 0 (delta 0), pack-reused 0
Receiving objects: 100% (7/7), done.
Resolving deltas: 100% (1/1), done.

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Program Files/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
core.editor="C:\Users\bs-46\AppData\Local\Programs\Microsoft VS Code\Code.exe" --wait
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git confic --local
git: 'confic' is not a git command. See 'git --help'.

The most similar command is
        config

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git config --local
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=<remote>/<branch> master


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git checkout
fatal: You are on a branch yet to be born

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (master)
$ git checkout -b ramalocalbs
Switched to a new branch 'ramalocalbs'

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ git status
On branch ramalocalbs

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fuentes/

nothing added to commit but untracked files present (use "git add" to track)

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ git status
On branch ramalocalbs

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        fuentes/

nothing added to commit but untracked files present (use "git add" to track)

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ git add .
warning: adding embedded git repository: fuentes
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint:
hint:   git submodule add <url> fuentes
hint:
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint:
hint:   git rm --cached fuentes
hint:
hint: See "git help submodule" for more information.

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ git status
On branch ramalocalbs

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   fuentes

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
        modified:   fuentes (modified content, untracked content)


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ ls
fuentes/

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea (ramalocalbs)
$ cd fuentes

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    artefactoPrueba

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        artefactoPrueba.txt
        pruebabs.txt

no changes added to commit (use "git add" and/or "git commit -a")

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (main)
$ git branch
* main

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (main)
$ git checkout -b localbs
Switched to a new branch 'localbs'

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git branch
* localbs
  main

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git status
On branch localbs
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    artefactoPrueba

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        artefactoPrueba.txt
        pruebabs.txt

no changes added to commit (use "git add" and/or "git commit -a")

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git status
On branch localbs
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        deleted:    artefactoPrueba

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        P.txt
        artefactoPrueba.txt

no changes added to commit (use "git add" and/or "git commit -a")

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git add.
git: 'add.' is not a git command. See 'git --help'.

The most similar command is
        add

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git add .

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git status
On branch localbs
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   P.txt
        deleted:    artefactoPrueba
        new file:   artefactoPrueba.txt


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git commit -m "crear nueva rama y artefacto archivo local"
Author identity unknown

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'bs-46@DESKTOPLENOVOPC.(none)')

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git push origin localbs
Total 0 (delta 0), reused 0 (delta 0), pack-reused 0
remote:
remote: Create a pull request for 'localbs' on GitHub by visiting:
remote:      https://github.com/MinTicTeamOne/fuentes/pull/new/localbs
remote:
To https://github.com/MinTicTeamOne/fuentes.git
 * [new branch]      localbs -> localbs

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ ^C

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git config --global user.email "you@example.com"

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git config --global user.email "braiansilva.94@gmail.com"

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git config --global user.name "Your Name"

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git config --global user.name "bsilva94"

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git config --global
usage: git config [<options>]

Config file location
    --global              use global config file
    --system              use system config file
    --local               use repository config file
    --worktree            use per-worktree config file
    -f, --file <file>     use given config file
    --blob <blob-id>      read config from given blob object

Action
    --get                 get value: name [value-pattern]
    --get-all             get all values: key [value-pattern]
    --get-regexp          get values for regexp: name-regex [value-pattern]
    --get-urlmatch        get value specific for the URL: section[.var] URL
    --replace-all         replace all matching variables: name value [value-pattern]
    --add                 add a new variable: name value
    --unset               remove a variable: name [value-pattern]
    --unset-all           remove all matches: name [value-pattern]
    --rename-section      rename section: old-name new-name
    --remove-section      remove a section: name
    -l, --list            list all
    --fixed-value         use string equality when comparing values to 'value-pattern'
    -e, --edit            open an editor
    --get-color           find the color configured: slot [default]
    --get-colorbool       find the color setting: slot [stdout-is-tty]

Type
    -t, --type <>         value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    -z, --null            terminate values with NUL byte
    --name-only           show variable names only
    --includes            respect include directives on lookup
    --show-origin         show origin of config (file, standard input, blob, command line)
    --show-scope          show scope of config (worktree, local, global, system, command)
    --default <value>     with --get, use default value when missing entry


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git status
On branch localbs
Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   P.txt
        deleted:    artefactoPrueba
        new file:   artefactoPrueba.txt


bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)
$ git push origin localbs
Everything up-to-date

bs-46@DESKTOPLENOVOPC MINGW64 /d/reposgit/udea/fuentes (localbs)